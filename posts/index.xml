<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Alex Gonzalez</title>
<link>https://alexgonzalezc.dev/posts/</link>
<atom:link href="https://alexgonzalezc.dev/posts/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<image>
<url>https://alexgonzalezc.dev/assets/images/welcome-blossoms.png</url>
<title>Alex Gonzalez</title>
<link>https://alexgonzalezc.dev/posts/</link>
<height>144</height>
<width>144</width>
</image>
<generator>quarto-1.7.32</generator>
<lastBuildDate>Wed, 30 Jul 2025 15:37:00 GMT</lastBuildDate>
<item>
  <title>Introducing RuneLog, a Simple ML Experiment Tracker for Python</title>
  <dc:creator>Alex Gonzalez</dc:creator>
  <link>https://alexgonzalezc.dev/posts/20250728-runelog-v0.1.0-release/</link>
  <description><![CDATA[ Experiment tracking in machine learning projects is often an afterthought for many practitioners, and it occurs once you’re deep in the modeling process and you have refactor most of your notebooks and scripts. Committing to tracking from the start of the project is sure to make your workflows more structured and reproducible. ]]></description>
  <category>Python</category>
  <category>ML</category>
  <category>MLOps</category>
  <category>Data Science</category>
  <guid>https://alexgonzalezc.dev/posts/20250728-runelog-v0.1.0-release/</guid>
  <pubDate>Wed, 30 Jul 2025 15:37:00 GMT</pubDate>
  <media:content url="https://alexgonzalezc.dev/posts/20250728-runelog-v0.1.0-release/runelog-cli.png" medium="image" type="image/png" height="69" width="144"/>
</item>
<item>
  <title>Why I Migrated My Blog from Pelican to Quarto</title>
  <dc:creator>Alex Gonzalez</dc:creator>
  <link>https://alexgonzalezc.dev/posts/20250723-switching-to-quarto/</link>
  <description><![CDATA[ For years, my blog ran on Pelican, a static site generator written in Python. It was powerful, flexible, and <em>a constant source of frustration</em>. I found myself spending more time wrestling with configurations, fixing broken themes, and making sacrifices to the dependency gods than actually writing. ]]></description>
  <category>Python</category>
  <category>Writing</category>
  <category>Data Science</category>
  <guid>https://alexgonzalezc.dev/posts/20250723-switching-to-quarto/</guid>
  <pubDate>Wed, 23 Jul 2025 16:37:00 GMT</pubDate>
  <media:content url="https://alexgonzalezc.dev/posts/20250723-switching-to-quarto/qblog.png" medium="image" type="image/png" height="53" width="144"/>
</item>
<item>
  <title>Understanding RAG systems with a practical application using locally executed LLMs</title>
  <dc:creator>Alex Gonzalez</dc:creator>
  <link>https://alexgonzalezc.dev/posts/20240402-rag-system-with-langchain/rag-system.html</link>
  <description><![CDATA[ One of the latest trending methods in modern NLP is <strong>Retrieval Augmented Generation</strong> (RAG), which is a recent approach to improve the information retrieval and generation capabilities of large language models. In a RAG system, the models are used to extract relevant information from large datasets and generate coherent responses and insights from them. This is a invaluable technique for several common use cases such as question answering or conversational agents. However, cutting-edge LLMs take vast amount of resources for training and inference and are not usually free to access. ]]></description>
  <category>AI</category>
  <category>Code</category>
  <guid>https://alexgonzalezc.dev/posts/20240402-rag-system-with-langchain/rag-system.html</guid>
  <pubDate>Tue, 02 Apr 2024 00:00:00 GMT</pubDate>
  <media:content url="https://alexgonzalezc.dev/posts/20240402-rag-system-with-langchain/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>A comment system for static websites using Github Discussions</title>
  <dc:creator>Alex Gonzalez</dc:creator>
  <link>https://alexgonzalezc.dev/posts/20220423-github-comment-system/</link>
  <description><![CDATA[ I’ve been searching for an easy alternative to a comment system for this <a href="https://www.alexgonzalezc.dev">blog</a>, which is built with <a href="https://blog.getpelican.com/">Pelican</a> and served through Github Pages. Being a static website, traditional server-based solutions are not a good fit or they require too much setup work that I really didn’t want to do. So after many months procrastinating on this, I finally sat down and got it work in less than an hour. Easy! ]]></description>
  <category>Web Dev</category>
  <guid>https://alexgonzalezc.dev/posts/20220423-github-comment-system/</guid>
  <pubDate>Sat, 23 Apr 2022 13:31:00 GMT</pubDate>
</item>
<item>
  <title>A Pint of API</title>
  <dc:creator>Alex Gonzalez</dc:creator>
  <link>https://alexgonzalezc.dev/posts/20191208-pint-of-api/</link>
  <description><![CDATA[ API stands for Application Programming Interface. In other words, it’s an <em>interface</em> that makes it easier for developers to <em>program</em> different <em>applications</em>. ]]></description>
  <category>Web Dev</category>
  <guid>https://alexgonzalezc.dev/posts/20191208-pint-of-api/</guid>
  <pubDate>Sat, 18 Jan 2020 23:50:00 GMT</pubDate>
</item>
</channel>
</rss>
